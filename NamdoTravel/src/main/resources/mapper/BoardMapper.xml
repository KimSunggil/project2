<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.project.app.board">
	
	<!-- 		select		 -->
		
	<select id="getPostList" parameterType="hashmap" resultType="PostVO">
		SELECT A.BOARD_ID, A.POST_ID, A.POST_NM, A.USER_NM, A.POST_DATE, A.HITS, A.LIKE, A.DISLIKE
			FROM (SELECT @rownum:=@rownum+1 rownum, A.* FROM (SELECT A.BOARD_ID, B.POST_ID, B.POST_NM, B.USER_NM, B.POST_DATE, B.HITS, C.LIKE, C.DISLIKE
					FROM NAMDODB.BOARD A INNER JOIN NAMDODB.POST B ON A.BOARD_ID = B.BOARD_ID
										 LEFT OUTER JOIN (SELECT A.POST_ID POST_ID, COUNT(CASE WHEN A.FAVOR='LIKE' THEN 1 END) AS 'LIKE', COUNT(CASE WHEN A.FAVOR='DISLIKE' THEN 1 END) AS 'DISLIKE'
															FROM NAMDODB.POST_FAVOR A GROUP BY A.POST_ID)C ON B.POST_ID = C.POST_ID
															WHERE A.BOARD_ID = 1 ORDER BY B.POST_ID DESC)A 
										 WHERE (@rownum:=0)=0)A limit ${pageIndex}, 10
	</select>
	
	<select id="getPaging" parameterType="int" resultType="int">
		SELECT CEIL(COUNT(A.BOARD_ID) / 10)
			FROM (SELECT A.BOARD_ID, B.POST_ID, B.POST_NM, B.USER_NM, B.POST_DATE, B.HITS, C.LIKE, C.DISLIKE
					FROM NAMDODB.BOARD A INNER JOIN NAMDODB.POST B ON A.BOARD_ID = B.BOARD_ID
										 LEFT OUTER JOIN (SELECT A.POST_ID POST_ID, COUNT(CASE WHEN A.FAVOR='LIKE' THEN 1 END) AS 'LIKE', COUNT(CASE WHEN A.FAVOR='DISLIKE' THEN 1 END) AS 'DISLIKE'
															FROM NAMDODB.POST_FAVOR A GROUP BY A.POST_ID)C ON B.POST_ID = C.POST_ID
															WHERE A.BOARD_ID = #{boardId} ORDER BY B.POST_ID DESC) A
	</select>
	
	<select id="getPost" parameterType="int" resultType="PostVO">
		SELECT A.BOARD_ID, A.POST_ID, A.POST_NM, A.USER_ID, A.USER_NM, A.POST_DATE, B.CONTENT, A.HITS, C.LIKE, C.DISLIKE	
			FROM NAMDODB.POST A INNER JOIN NAMDODB.POST_CONTENT B ON A.POST_ID = B.POST_ID 
								LEFT OUTER JOIN (SELECT A.POST_ID POST_ID, COUNT(CASE WHEN A.FAVOR='LIKE' THEN 1 END) AS 'LIKE', COUNT(CASE WHEN A.FAVOR='DISLIKE' THEN 1 END) AS 'DISLIKE'
													FROM NAMDODB.POST_FAVOR A GROUP BY A.POST_ID)C ON B.POST_ID = C.POST_ID																
    		WHERE A.POST_ID = #{postId}
	</select>

	<select id="getReplyList" parameterType="int" resultType="ReplyVO">
		SELECT A.REPLY_ID, A.POST_ID, A.SUPER_REPLY, A.USER_ID, B.NICKNAME, A.CONTENT, A.REPLY_DATE
			FROM NAMDODB.REPLY A INNER JOIN NAMDODB.USER B ON A.USER_ID = B.USER_ID
			WHERE A.POST_ID = #{postId} ORDER BY A.REPLY_ID
	</select>
	
	<select id="seachPostFavor" parameterType="FavorVO" resultType="String">
		SELECT A.FAVOR
			FROM NAMDODB.POST_FAVOR A
			WHERE A.POST_ID = ${postId} AND A.USER_ID = '${userId}' 
	</select>
	
	<!-- 		insert		 -->
	
	<insert id="addPost" parameterType="AddPostVO">
		INSERT INTO NAMDODB.POST( POST_ID, BOARD_ID, USER_ID, USER_NM, POST_NM, POST_DATE, CATEGORY)
			VALUES ((SELECT MAX(A.POST_ID)+1 FROM NAMDODB.POST A), #{boardId}, #{userId}, (SELECT A.NICKNAME FROM NAMDODB.USER A WHERE A.USER_ID = #{userId}), #{postNm}, SYSDATE(), '자유')
	</insert>
	<insert id="addPostContent" parameterType="AddPostVO">
		INSERT INTO NAMDODB.POST_CONTENT(POST_ID, CONTENT)
		    VALUES ((SELECT MAX(A.POST_ID)+1 FROM NAMDODB.POST_CONTENT A), #{postContent})
	</insert>
	
	<insert id="addReply" parameterType="ReplyVO">
		INSERT INTO NAMDODB.REPLY(REPLY_ID, POST_ID, SUPER_REPLY, USER_ID, CONTENT, REPLY_DATE)
			VALUE ((SELECT MAX(A.REPLY_ID)+1 FROM NAMDODB.REPLY A), #{postId}, #{superReply}, #{userId}, #{content}, now())
	</insert>
	
	<insert id="addPostFavor" parameterType="FavorVO">
		INSERT INTO NAMDODB.POST_FAVOR(POST_ID, USER_ID, FAVOR)
			VALUES (#{postId}, #{userId}, #{favor})
	</insert>
	
	<!-- 		update		 -->
	<update id="modifyPost" parameterType="PostVO">
		UPDATE NAMDODB.POST
			SET POST_NM = #{postNm}
			WHERE POST_ID = #{postId}
	</update>
	<update id="modifyPostContent" parameterType="PostVO">
		UPDATE NAMDODB.POST_CONTENT
			SET CONTENT = #{content}
			WHERE POST_ID = #{postId}
	</update>
	
	<update id="plusHits" parameterType="int">
		UPDATE NAMDODB.POST
			SET HITS = HITS+1
			WHERE POST_ID = #{postId}
	</update>
	
	<update id="modifyReply" parameterType="ReplyVO">
		UPDATE NAMDODB.REPLY
			SET CONTENT = #{content}
			WHERE REPLY_ID = #{replyId}
	</update>
	
	<!-- 		delete		 -->
	<delete id="deletePost" parameterType="int">
		DELETE FROM NAMDODB.POST WHERE POST_ID = #{postId}
	</delete>
	<delete id="deletePostContent" parameterType="int">
		DELETE FROM NAMDODB.POST_CONTENT WHERE POST_ID = #{postId}
	</delete>
	
	<delete id="deleteReply" parameterType="int">
		DELETE FROM NAMDODB.REPLY WHERE REPLY_ID = #{replyId}
	</delete>
</mapper>